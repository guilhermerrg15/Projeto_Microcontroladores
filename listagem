#include <SPI.h>
#include <SdFat.h>
#include <Adafruit_GFX.h>
#include <MCUFRIEND_kbv.h>
#include <JKSButton.h>

MCUFRIEND_kbv tela;
SdFatSoftSpi<12, 11, 13> SD;
TouchScreen touch(6, A1, A2, 7, 300);
JKSButton botaoinfra;
JKSButton botaorfid;
File diretorio;
File jsonFile;
int cont = 0;
String caminhoarq;
int idx_tela = 1;

struct BotaoArquivo {
  JKSButton botao;
  char nomeArquivo[20];
};
BotaoArquivo botoes[10];

void initializeSD() {
  if (!SD.begin(10)) {
    Serial.println("Erro ao inicializar o cartão SD!");
    while (true)
      ;
  }
  Serial.println("Cartão SD inicializado.");
}

void readDir(const char* caminho) {
  idx_tela = 2;
  caminhoarq = caminho;
  tela.fillScreen(TFT_BLACK);
  cont = 0;
  diretorio = SD.open(caminho);
  if (!diretorio) {
    Serial.print("Erro ao abrir o diretório: ");
    Serial.println(caminho);
    return;
  }
  while (true) {
    File entrada = diretorio.openNextFile();
    if (!entrada) break;
    if (cont >= 20) break;
    if (!entrada.isDirectory()) {
      entrada.getName(botoes[cont].nomeArquivo, sizeof(botoes[cont].nomeArquivo));
      int y = 50 + cont * 50;
      botoes[cont].botao.init(&tela, &touch, 100, y, 140, 30, TFT_WHITE, TFT_RED, TFT_BLACK, botoes[cont].nomeArquivo, 2);
      botoes[cont].botao.setPressHandler([](JKSButton& btn) {
        readJsonFile(btn);
      });
      Serial.println(botoes[cont].nomeArquivo);
      cont++;
    }
    entrada.close();
  }
  diretorio.close();
}

void readJsonFile(JKSButton& button) {
  idx_tela = 3;
  for (int i = 0; i < cont; i++) {
    if (&botoes[i].botao == &button) {
      jsonFile = SD.open(caminhoarq + "/" + botoes[i].nomeArquivo);
      if (!jsonFile) {
        Serial.print("Erro ao abrir o json: ");
        return;
      }
      Serial.print("Abrindo arquivo: ");
      Serial.println(botoes[i].nomeArquivo);
      tela.fillScreen(TFT_BLACK);
      while (jsonFile.available()) {
        String line = jsonFile.readStringUntil('\n');
        Serial.println("Conteúdo: " + line);
        tela.setCursor(10, 10 + i * 20);
        tela.setTextColor(TFT_WHITE);
        tela.setTextSize(2);
        tela.print(line);
        i += 1;
      }
      jsonFile.close();
    }
  }
}

void escolhainfra() {
  idx_tela = 2;
  readDir("/infra");
}

void escolharfid() {
  idx_tela = 2;
  readDir("/rfid");
}

void setup() {
  Serial.begin(9600);
  initializeSD();
  tela.begin(tela.readID());
  tela.fillScreen(TFT_BLACK);

  botaoinfra.init(&tela, &touch, 100, 50, 140, 30, TFT_WHITE, TFT_RED, TFT_BLACK, "infra", 2);
  botaoinfra.setPressHandler(escolhainfra);

  botaorfid.init(&tela, &touch, 100, 100, 140, 30, TFT_WHITE, TFT_RED, TFT_BLACK, "rfid", 2);
  botaorfid.setPressHandler(escolharfid);
}

void loop() {
  if (idx_tela == 1) {
    botaoinfra.process();
    botaorfid.process();
  }
  if (idx_tela == 2) {
    for (int n = 0; n < cont; n++) {
      botoes[n].botao.process();
    }
  }
}
